name: Release

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  build-debian:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Confirm changelog version is bumped
        run: |
          sudo apt install -y dpkg-dev
          echo "VERSION=$(dpkg-parsechangelog -Sversion)" >> $GITHUB_ENV
          latest_release_tag=$(git rev-list --tags --max-count=1)
          if [[ -n "${latest_release_tag}" ]]; then
            latest_release_version="$(git describe --tags "${latest_release_tag}")"
            if [[ ${{ env.VERSION }} != "${latest_release_version}" ]]; then
              echo "Changelog needs updating. Run 'update-changelog.yml' first"
              exit
            fi
          fi

      # ------------------------------------------------------------------------

      - name: Patch changelog (release)
        uses: pi-top/git-debian-changelog-bump-action@develop
        with:
          release: true
          author_name: "pi-top"
          author_email: "deb-maintainers@pi-top.com"

      # ------------------------------------------------------------------------

      - name: Build Debian package
        uses: pi-top/action-debian-package@master
        with:
          target_architecture: ${{ matrix.target_architecture }}
          docker_image: pitop/pi-top-os-base:bullseye
          path: ./artifacts

      # ------------------------------------------------------------------------

      # - name: Upload Debian package artifacts
      #   uses: pi-top/debian-package-artifact-uploader@master
      #   with:
      #     path: ./artifacts
      #     full_build: true
      #     full_build_name: "dsc"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "dsc"
          path: "./artifacts"

################################################################################

  release:
    runs-on: ubuntu-20.04
    needs: build-debian
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: "dsc"
          path: "./artifacts"

      # TODO: get from 'build-debian'
      - uses: actions/checkout@v2.2.0
      - name: Determine version
        run: |
          sudo apt install -y dpkg-dev
          echo "VERSION=$(dpkg-parsechangelog -Sversion)" >> $GITHUB_ENV
          rm -rf ./*

      # ------------------------------------------------------------------------

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "v${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: ./artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
