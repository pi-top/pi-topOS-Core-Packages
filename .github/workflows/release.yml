name: Release

on:
  # Testing trigger
  push:
    branches:
      - bullseye
  workflow_dispatch:
    branches:
      - master

env:
  REPO: "bullseye-experimental"
  OS: "Debian"

jobs:
  release:
    runs-on: ubuntu-20.04
    needs: build-debian
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code
        uses: actions/checkout@v2.2.0

      - name: Determine version
        run: |
          sudo apt install -y dpkg-dev
          echo "VERSION=$(dpkg-parsechangelog -Sversion)" >> $GITHUB_ENV
          rm -rf ./*

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: Build
          branch: master

      - name: Debug
        run: |
          ls -laR

      # - name: Download Debian binary artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #       name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb"
      #       path: "./deb/"

      # - name: Download Debian source artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #       name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb-src"
      #       path: "./deb-src/"

      # - name: Move files
      #   run: |
      #     mv ./deb-src/* ./deb/

      # - name: Create Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: "v${{ env.VERSION }}"
      #     name: "v${{ env.VERSION }}"
      #     draft: false
      #     prerelease: false
      #     files: |
      #       ./deb/*
      #       ./deb-src/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Publish .deb packages
      #   run: |
      #     sudo gem install package_cloud

      #     PACKAGECLOUD_TOKEN=${{ secrets.PACKAGECLOUD_TOKEN }} \
      #       package_cloud \
      #         push --verbose \
      #         pi-top/${{ env.REPO }}/${{ env.OS }}/{{ env.VERSION }} \
      #         $(find ./deb -name "*.dsc")
