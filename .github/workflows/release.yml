name: Release

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  build-debian:
    runs-on: ubuntu-20.04
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Confirm changelog version is bumped
        run: |
          sudo apt install -y dpkg-dev
          echo "VERSION=$(dpkg-parsechangelog -Sversion)" >> $GITHUB_ENV
          latest_release_tag=$(git rev-list --tags --max-count=1)
          if [[ -n "${latest_release_tag}" ]]; then
            latest_release_version="$(git describe --tags "${latest_release_tag}")"
            if [[ ${{ env.VERSION }} != "${latest_release_version}" ]]; then
              echo "Changelog needs updating. Run 'update-changelog.yml' first"
              exit
            fi
          fi

      - name: Build Debian package
        run: |
          mkdir -p /tmp/artifacts/{src,bin}
          docker run --rm \
            --volume ${{ github.workspace }}:/src \
            --volume /tmp/artifacts/bin:/build \
            pitop/deb-build:latest

      - name: Separate Debian source package files from binary
        run: |
          mv /tmp/artifacts/bin/* /tmp/artifacts/src/
          mv /tmp/artifacts/src/*.deb /tmp/artifacts/bin/

      - name: Upload Debian source package files
        uses: actions/upload-artifact@v2
        with:
          name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb-src"
          path: "/tmp/artifacts/src/"

      - name: Upload Debian binary packages
        uses: actions/upload-artifact@v2
        with:
          name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb"
          path: "/tmp/artifacts/bin/"

  release:
    runs-on: ubuntu-20.04
    needs: build-debian
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code
        uses: actions/checkout@v2.2.0

      - name: Download Debian binary artifacts
        uses: actions/download-artifact@v2
        with:
            name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb"
            path: "./deb/"

      - name: Download Debian source artifacts
        uses: actions/download-artifact@v2
        with:
            name: "${{ env.GITHUB_REPOSITORY_NAME }}-#${{ env.GITHUB_SHA_SHORT }}-deb-src"
            path: "./deb-src/"

      - name: Determine version
        run: |
          sudo apt install -y dpkg-dev
          echo "VERSION=$(dpkg-parsechangelog -Sversion)" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "v${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: |
            ./deb/*
            ./deb-src/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
