#!/bin/bash
###############################################################
#                Unofficial 'Bash strict mode'                #
# http://redsymbol.net/articles/unofficial-bash-strict-mode/  #
###############################################################
set -euo pipefail
IFS=$'\n\t'
###############################################################

check_period_seconds=${1:-5}
high_mem_usage_threshold=${2:-0.85}

notification_id=""

is_over_threshold="false"

stop_file="/tmp/stop-mem-monitor"

echo "Running memory monitor checking every ${check_period_seconds} for memory usage threshold of ${high_mem_usage_threshold}"

decimal_is_larger() {
	if [ "${1%.*}" -eq "${2%.*}" ] && [ "${1#*.}" \> "${2#*.}" ]; then
		return 0
	else
		return 1
	fi
}

integer_is_larger() {
	if [ "${1%.*}" -gt "${2%.*}" ]; then
		return 0
	else
		return 1
	fi
}

value_is_larger() {
	if decimal_is_larger "${1}" "${2}" || integer_is_larger "${1}" "${2}"; then
		return 0
	else
		return 1
	fi
}

while [[ ! -f "${stop_file}" ]]; do

	memory_usage="$(grep 'MemTotal:\|MemAvailable:' /proc/meminfo | tr 'kB' ' ' | tr '\n' ' ' | awk '{ print 1-($4/$2) }')"
	swap_usage="$(swapon -s | tail -n1 | awk '{print ($4/$3)}')"

	if value_is_larger "${memory_usage}" "${high_mem_usage_threshold}" && value_is_larger "${swap_usage}" "${high_mem_usage_threshold}"; then
		if [[ "${is_over_threshold}" == "false" ]]; then
			is_over_threshold="true"
			title="Available system memory is low"
			body="For best performance, try not to have too many applications, windows or internet browser tabs open."
			notification_id="$(/usr/bin/pt-notify-send --print-id --close-action="touch ${stop_file}" --expire-time=0 --icon="dialog-information" "${title}" "${body}")"
		fi
	else
		if [[ "${is_over_threshold}" == "true" ]]; then
			is_over_threshold="false"
			if [[ -n "${notification_id}" ]]; then
				/usr/bin/pt-notify-send "--close=${notification_id}"
				notification_id=""
			fi
		fi
	fi

	sleep "${check_period_seconds}"

done
